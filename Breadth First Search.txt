    // Breadth-First Search (BFS)
    void BFS(int start) {
        vector<bool> visited(adjList.size(), false);
        queue<int> q;
        q.push(start);
        visited[start] = true;

        while (!q.empty()) {
            int node = q.front();
            q.pop();
            cout << node << " "; // Process node (print it)
            
            // Visit all the neighbors
            for (const auto &neighbor : adjList[node]) {
                int neighborNode = neighbor.first;
                if (!visited[neighborNode]) {
                    visited[neighborNode] = true;
                    q.push(neighborNode);
                }
            }
        }
        cout << endl;
    }
